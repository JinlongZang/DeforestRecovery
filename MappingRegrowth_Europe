//Upload and import global GLASS LAI median mosaics (250m, 2000-2021, LAI_scale: 0.1, FPAR_scale: 0.004)
//Import global AVHRR LAI and FPAR medians before 2000 (AVHRR LAI and FPAR: 1981-06-24â€“2013-12-31,scale = 0.001,5km)
var resample = function(image) {var resampledImage = image.resample('bilinear').reproject({crs: 'EPSG:4326',scale: 30});return resampledImage;};

//Import global forest fire dataset (30m)
var loss_due_to_fire = ee.ImageCollection('users/sashatyu/2001-2022_fire_forest_loss_annual').mosaic();
var loss_due_to_fire2019 = loss_due_to_fire.updateMask(loss_due_to_fire.lt(20));

//Upload and import windstorm-induced forest loss dataset (30m)
var wind = wind_loss.updateMask(wind_loss.gt(2000));

//Import global forest loss dataset (30m)
var gfc2022 = ee.Image('UMD/hansen/global_forest_change_2022_v1_10');
var lossyear = gfc2022.select(['lossyear']);
var lossyear2019 = lossyear.updateMask(lossyear.lt(20));
var loss_recover_time1=lossyear2019.multiply(-1).add(20);
var loss_recover_time = loss_recover_time1.updateMask(loss_recover_time1.gt(0)).uint8();

//Mask and extract deforestation
var deforestation_recover_time = loss_recover_time.updateMask(loss_due_to_fire2019.mask().not()).updateMask(wind.mask().not());

//Extract forest recover area
var FNF4 = ee.ImageCollection('JAXA/ALOS/PALSAR/YEARLY/FNF4')
                  .filterDate('2020-01-01', '2020-12-31')
                  .select('fnf');
var FNF_ = FNF4.qualityMosaic('fnf');
var FNF = resample(FNF_);
var forest_2020 = FNF.updateMask(FNF.lte(2));//1_Dense forest; 2_Non-dence Forest; 3_Non-forest; 4_Water
var forest_recover = deforestation_recover_time.updateMask(forest_2020.mask());

////**Map regrowth land type in 2020**
//Import PlantationYear dataset (1982-2019, 30 m)
var plantationYear = ee.ImageCollection(PYear).mosaic().select(['b1']);
var plantation2001_2020 = plantationYear.updateMask(plantationYear.gt(2000));
var plantation = forest_recover.updateMask(plantation2001_2020.mask());
var natural_regrowth_forest = forest_recover.updateMask(plantation.mask().not());
var plantation1 = plantation.where(plantation,1);
var natural_regrowth_forest2 = natural_regrowth_forest.where(natural_regrowth_forest,2);
var nonforest_recover = deforestation_recover_time.updateMask(forest_recover.mask().not());
var nonforest_recover3 = nonforest_recover.where(nonforest_recover, 3);
var recover_type2020 = ee.ImageCollection([plantation1, natural_regrowth_forest2, nonforest_recover3]).mosaic().uint8();
var forest_recover_time = forest_recover;

////**Map forest height and AGB regowth ratio**
var forest_height2000= ee.Image("projects/glad/GLCLU2020/Forest_height_2000").select("b1");
var forest_height2020= ee.Image("projects/glad/GLCLU2020/Forest_height_2020").select("b1");
var height_2020 = forest_height2020.updateMask(forest_recover.mask());
var AGB_2000_reference= forest_height2000.updateMask(height_2020.mask()).pow(1.2103).multiply(0.3538).multiply(10);

//2020
var AGB_2020_=  height_2020.pow(1.2103).multiply(0.3538).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var height_recover2020_ratio = height_2020.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var forest_recover_time2015 = forest_recover_time.subtract(5);
var frt2015 =  forest_recover_time2015.updateMask(forest_recover_time2015.gt(0));
var height_2015_ = frt2015.multiply(-0.1146).exp().multiply(-22.16).add(24.02).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(1.2103).multiply(0.3538).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var forest_recover_time2010 = forest_recover_time2015.subtract(5);
var frt2010 =  forest_recover_time2010.updateMask(forest_recover_time2010.gt(0));
var height_2010_ = frt2010.multiply(-0.1146).exp().multiply(-22.16).add(24.02).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(1.2103).multiply(0.3538).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var forest_recover_time2005 = forest_recover_time2010.subtract(5);
var frt2005 = forest_recover_time2005.updateMask(forest_recover_time2005.gt(0));
var height_2005_ = frt2005.multiply(-0.1146).exp().multiply(-22.16).add(24.02).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(forest_height2000.float()).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(1.2103).multiply(0.3538).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_2000_reference.float()).multiply(100).toUint8().updateMask(AGB_2005.mask());

////**Map forest height and AGB regowth rate**
//2020
var height_recover_rate2020 = forest_recover_time.multiply(-0.1146).exp().multiply(2.5395).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(-0.1146).exp().multiply(1.0874).multiply
      (forest_recover_time.multiply(-0.1146).exp().multiply(-22.16).add(24.02).pow(0.2103)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(-0.1146).exp().multiply(2.5395).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(-0.1146).exp().multiply(1.0874).multiply
      (frt2015.multiply(-0.1146).exp().multiply(-22.16).add(24.02).pow(0.2103)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(-0.1146).exp().multiply(2.5395).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(-0.1146).exp().multiply(1.0874).multiply
      (frt2010.multiply(-0.1146).exp().multiply(-22.16).add(24.02).pow(0.2103)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(-0.1146).exp().multiply(2.5395).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(-0.1146).exp().multiply(1.0874).multiply
      (frt2005.multiply(-0.1146).exp().multiply(-22.16).add(24.02).pow(0.2103)).add(0.1).multiply(10).toUint8();

////**Map forest LAI and FPAR regowth ratio**
var LAI250m_2000 = resample(LAI250m_2000_);var LAI250m_2001 = resample(LAI250m_2001_);var LAI250m_2004 = resample(LAI250m_2004_);
var LAI250m_2005 = resample(LAI250m_2005_);var LAI250m_2006 = resample(LAI250m_2006_);var LAI250m_2009 = resample(LAI250m_2009_);
var LAI250m_2010 = resample(LAI250m_2010_);var LAI250m_2011 = resample(LAI250m_2011_);var LAI250m_2014 = resample(LAI250m_2014_);
var LAI250m_2015 = resample(LAI250m_2015_);
var LAI250m_2016 = resample(LAI250m_2016_);var LAI250m_2019 = resample(LAI250m_2019_);var LAI250m_2020 = resample(LAI250m_2020_);
var LAI250m_2021 = resample(LAI250m_2021_);
var FPAR250m_2000 = resample(FPAR250m_2000_);var FPAR250m_2001 = resample(FPAR250m_2001_);var FPAR250m_2004 = resample(FPAR250m_2004_);
var FPAR250m_2005 = resample(FPAR250m_2005_);var FPAR250m_2006 = resample(FPAR250m_2006_);var FPAR250m_2009 = resample(FPAR250m_2009_);
var FPAR250m_2010 = resample(FPAR250m_2010_);var FPAR250m_2011 = resample(FPAR250m_2011_);var FPAR250m_2014 = resample(FPAR250m_2014_);
var FPAR250m_2015 = resample(FPAR250m_2015_);
var FPAR250m_2016 = resample(FPAR250m_2016_);var FPAR250m_2019 = resample(FPAR250m_2019_);var FPAR250m_2020 = resample(FPAR250m_2020_);
var FPAR250m_2021 = resample(FPAR250m_2021_);

//2020
var LAI_recover2020 = LAI250m_2020_.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2020 = FPAR250m_2020_.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2020_ratio = LAI_recover2020.float().divide(LAI250m_2000_.float()).multiply(100).toUint8().updateMask(LAI_recover2020.mask());
var FPAR_recover2020_ratio = FPAR_recover2020.float().divide(FPAR250m_2000_.float()).multiply(100).toUint8().updateMask(FPAR_recover2020.mask());
//2015
var LAI_recover2015 = LAI250m_2015_.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2015 = FPAR250m_2015_.updateMask(frt2015.mask()).toUint8();
var LAI_recover2015_ratio = LAI_recover2015.float().divide(LAI250m_2000_.float()).multiply(100).toUint8().updateMask(LAI_recover2015.mask());
var FPAR_recover2015_ratio = FPAR_recover2015.float().divide(FPAR250m_2000_.float()).multiply(100).toUint8().updateMask(FPAR_recover2015.mask());
//2010
var LAI_recover2010 = LAI250m_2010_.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2010 = FPAR250m_2010_.updateMask(frt2010.mask()).toUint8();
var LAI_recover2010_ratio = LAI_recover2010.float().divide(LAI250m_2000_.float()).multiply(100).toUint8().updateMask(LAI_recover2010.mask());
var FPAR_recover2010_ratio = FPAR_recover2010.float().divide(FPAR250m_2000_.float()).multiply(100).toUint8().updateMask(FPAR_recover2010.mask());
//2005
var LAI_recover2005 = LAI250m_2005_.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2005 = FPAR250m_2005_.updateMask(frt2005.mask()).toUint8();
var LAI_recover2005_ratio = LAI_recover2005.float().divide(LAI250m_2000_.float()).multiply(100).toUint8().updateMask(LAI_recover2005.mask());
var FPAR_recover2005_ratio = FPAR_recover2005.float().divide(FPAR250m_2000_.float()).multiply(100).toUint8().updateMask(FPAR_recover2005.mask());

////**Map forest LAI and FPAR regowth rate**
var LAI_recover2021 = LAI250m_2021.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2019 = LAI250m_2019.updateMask(forest_recover_time.mask()).toUint8();
var LAI_recover2016 = LAI250m_2016.updateMask(frt2015.mask()).toUint8();
var LAI_recover2014 = LAI250m_2014.updateMask(frt2015.mask()).toUint8();
var LAI_recover2011 = LAI250m_2011.updateMask(frt2010.mask()).toUint8();
var LAI_recover2009 = LAI250m_2009.updateMask(frt2010.mask()).toUint8();
var LAI_recover2006 = LAI250m_2006.updateMask(frt2005.mask()).toUint8();
var LAI_recover2004 = LAI250m_2004.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2021 = FPAR250m_2021.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2019 = FPAR250m_2019.updateMask(forest_recover_time.mask()).toUint8();
var FPAR_recover2016 = FPAR250m_2016.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2014 = FPAR250m_2014.updateMask(frt2015.mask()).toUint8();
var FPAR_recover2011 = FPAR250m_2011.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2009 = FPAR250m_2009.updateMask(frt2010.mask()).toUint8();
var FPAR_recover2006 = FPAR250m_2006.updateMask(frt2005.mask()).toUint8();
var FPAR_recover2004 = FPAR250m_2004.updateMask(frt2005.mask()).toUint8();
//2020
var LAI_recover_rate2020_ = (LAI_recover2021.subtract(LAI_recover2019)).divide(2);
var LAI_recover_rate2020 = LAI_recover_rate2020_.where(LAI_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2020_ = (FPAR_recover2021.subtract(FPAR_recover2019)).divide(2);
var FPAR_recover_rate2020 = FPAR_recover_rate2020_.where(FPAR_recover_rate2020_.lt(0.1),0.1).multiply(10).toUint8();
//2015
var LAI_recover_rate2015_ = (LAI_recover2016.subtract(LAI_recover2014)).divide(2);
var LAI_recover_rate2015 = LAI_recover_rate2015_.where(LAI_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2015_ = (FPAR_recover2016.subtract(FPAR_recover2014)).divide(2);
var FPAR_recover_rate2015 = FPAR_recover_rate2015_.where(FPAR_recover_rate2015_.lt(0.1),0.1).multiply(10).toUint8();
//2010
var LAI_recover_rate2010_ = (LAI_recover2011.subtract(LAI_recover2009)).divide(2);
var LAI_recover_rate2010 = LAI_recover_rate2010_.where(LAI_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2010_ = (FPAR_recover2011.subtract(FPAR_recover2009)).divide(2);
var FPAR_recover_rate2010 = FPAR_recover_rate2010_.where(FPAR_recover_rate2010_.lt(0.1),0.1).multiply(10).toUint8();
//2005
var LAI_recover_rate2005_ = (LAI_recover2006.subtract(LAI_recover2004)).divide(2);
var LAI_recover_rate2005 = LAI_recover_rate2005_.where(LAI_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();
var FPAR_recover_rate2005_ = (FPAR_recover2006.subtract(FPAR_recover2004)).divide(2);
var FPAR_recover_rate2005 = FPAR_recover_rate2005_.where(FPAR_recover_rate2005_.lt(0.1),0.1).multiply(10).toUint8();

//Add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005])
                    .rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005']);
var AGB_regrowth = recover_type2020.addBands([ 
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005])
                    .rename([
                    'Regrowth_type_2020', 
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005']);
var LAI_regrowth = recover_type2020.addBands([
                    LAI_recover2020_ratio, LAI_recover2015_ratio, LAI_recover2010_ratio, LAI_recover2005_ratio,
                    LAI_recover_rate2020, LAI_recover_rate2015, LAI_recover_rate2010, LAI_recover_rate2005])
                    .rename([
                    'Regrowth_type_2020',
                    'LAI_regrowth_ratio_2020', 'LAI_regrowth_ratio_2015', 'LAI_regrowth_ratio_2010', 'LAI_regrowth_ratio_2005',
                    'LAI_regrowth_rate_2020', 'LAI_regrowth_rate_2015', 'LAI_regrowth_rate_2010', 'LAI_regrowth_rate_2005']);
var FPAR_regrowth = recover_type2020.addBands([
                    FPAR_recover2020_ratio, FPAR_recover2015_ratio, FPAR_recover2010_ratio, FPAR_recover2005_ratio,
                    FPAR_recover_rate2020, FPAR_recover_rate2015, FPAR_recover_rate2010, FPAR_recover_rate2005])
                    .rename([
                    'Regrowth_type_2020', 
                    'FPAR_regrowth_ratio_2020', 'FPAR_regrowth_ratio_2015', 'FPAR_regrowth_ratio_2010', 'FPAR_regrowth_ratio_2005',
                    'FPAR_regrowth_rate_2020', 'FPAR_regrowth_rate_2015', 'FPAR_regrowth_rate_2010', 'FPAR_regrowth_rate_2005']);        

//Export
var lonMin = -10; var lonMax = 40; 
var latMin = 30; var latMax = 70; 
for (var lon = lonMin; lon < lonMax; lon += 10) {for (var lat = latMin; lat < latMax; lat += 10) {
    var blockGeometry = ee.Geometry.Rectangle([lon, lat, lon + 10, lat + 10]);
    var clipped_height_regrowth = height_regrowth.clip(blockGeometry);
    var clipped_AGB_regrowth = AGB_regrowth.clip(blockGeometry);
    var clipped_LAI_regrowth = LAI_regrowth.clip(blockGeometry);
    var clipped_FPAR_regrowth = FPAR_regrowth.clip(blockGeometry);
    var direction = '';if (lat >= 0) {direction += 'N' + lat ;} else {direction += 'S' + -lat;} if (lon >= 0) {direction += '_E'  + lon;} else {direction += '_W' + -lon ;}
    var export1 = {image: clipped_height_regrowth,description: 'Europe_Height_regrowth_' + direction,
    folder: 'Deforest_Europe_Height_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export1);
    var export2 = {image: clipped_AGB_regrowth,description: 'Europe_AGB_regrowth_' + direction,
    folder: 'Deforest_Europe_AGB_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export2);
    var export3 = {image: clipped_LAI_regrowth,description: 'Europe_LAI_regrowth_' + direction,
    folder: 'Deforest_Europe_LAI_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export3);
    var export4 = {image: clipped_FPAR_regrowth,description: 'Europe_FPAR_regrowth_' + direction,
    folder: 'Deforest_Europe_FPAR_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export4);}}
