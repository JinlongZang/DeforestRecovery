//Import TMF data
var DeforestationYear= ee.ImageCollection("projects/JRC/TMF/v1_2021/DeforestationYear").select("DeforestationYear");
var TransitionClass= ee.ImageCollection("projects/JRC/TMF/v1_2021/TransitionMap_MainClasses").select("TransitionClass");
var DeforestationYearm =DeforestationYear.qualityMosaic('DeforestationYear');
var TransitionClassm =TransitionClass.qualityMosaic('TransitionClass');
//Extract deforestation data from 1982 to 2019
var deforest = DeforestationYearm.updateMask(DeforestationYearm.gte(1982));
var deforest1 = deforest.updateMask(deforest.lt(2020)).toUint16();
//Calculate recover duration
var recover_time=deforest1.multiply(-1).add(2020);

////**Map regrowth land type in 2020**
var Transition = TransitionClassm.updateMask(TransitionClassm.lt(43));
var Transition1 = Transition.updateMask(Transition.gt(30));                                 
var recover_type2020_ = Transition1.updateMask(deforest1.mask()).toUint8();
var tree_plantation = recover_type2020_.updateMask(recover_type2020_.eq(41));
var forest_regrowth = recover_type2020_.updateMask(recover_type2020_.eq(30));
var nonforest_recover = recover_type2020_.updateMask(recover_type2020_.gt(41));
var plantation1 = tree_plantation.where(tree_plantation,1);
var natural_regrowth_forest2 = forest_regrowth.where(forest_regrowth,2);
var nonforest_recover3 = nonforest_recover.where(nonforest_recover,3);
var recover_type2020 = ee.ImageCollection([plantation1, natural_regrowth_forest2, nonforest_recover3]).mosaic().uint8();

////**Map forest height and AGB regowth ratio**
var alltree_recover = ee.ImageCollection([forest_regrowth, tree_plantation]).mosaic();
var forest_recover_time = recover_time.updateMask(alltree_recover.mask()).toUint8();
var forest_height2000= ee.Image("projects/glad/GLCLU2020/Forest_height_2000").select("b1");
var forest_height2020= ee.Image("projects/glad/GLCLU2020/Forest_height_2020").select("b1");
var height_2020 = forest_height2020.updateMask(alltree_recover.mask());

//Calculate virgin forest height
var FNF4 = ee.ImageCollection('JAXA/ALOS/PALSAR/YEARLY/FNF4')
                  .filterDate('2020-01-01', '2020-12-31')
                  .select('fnf');
var FNF = FNF4.qualityMosaic('fnf');//1_Dense forest; 2_Non-dence Forest; 3_Non-forest; 4_Water
var forest_2020 = FNF.updateMask(FNF.lte(2));
var gfc2022 = ee.Image('UMD/hansen/global_forest_change_2022_v1_10');
var lossyear = gfc2022.select(['lossyear']);
var lossyear2019 = lossyear.updateMask(lossyear.lt(20));
var virgin_forest_height= forest_height2020.updateMask(forest_2020
                       .updateMask(lossyear2019.mask().not()).updateMask(recover_type2020.mask().not()));
var statistics = virgin_forest_height.reduceRegion({
  reducer: ee.Reducer.mean().combine(ee.Reducer.stdDev(), '', true),
  geometry: geometry,
  scale: 30,
  maxPixels: 1e13});
var meanValue = ee.FeatureCollection([ee.Feature(null, {'meanValue': statistics.get('b1_mean')})]);
Export.table.toDrive({collection: meanValue,description: 'meanValue', folder: 'VirginForestHeight',fileFormat: 'CSV'});
var height_1981_reference = 18;
var AGB_1981_reference= ee.Number(18).pow(2.12).multiply(0.0251).multiply(10);

//2020
var AGB_2020_=  height_2020.pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_2020 = AGB_2020_.updateMask(AGB_2020_.gt(0));
var height_recover2020_ratio = height_2020.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_2020.mask());
var AGB_recover2020_ratio = AGB_2020.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_2020.mask());
//2015
var forest_recover_time2015 = forest_recover_time.subtract(5);
var frt2015 =  forest_recover_time2015.updateMask(forest_recover_time2015.gt(0));
var height_2015_ = frt2015.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_2015 = height_2015_.updateMask(height_2015_.gt(2));
var height_recover2015_ratio = height_2015.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_2015.mask());
var AGB_2015_=  height_2015.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_2015 = AGB_2015_.updateMask(AGB_2015_.gt(0));
var AGB_recover2015_ratio = AGB_2015.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_2015.mask());
//2010
var forest_recover_time2010 = forest_recover_time2015.subtract(5);
var frt2010 =  forest_recover_time2010.updateMask(forest_recover_time2010.gt(0));
var height_2010_ = frt2010.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_2010 = height_2010_.updateMask(height_2010_.gt(2));
var height_recover2010_ratio = height_2010.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_2010.mask());
var AGB_2010_=  height_2010.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_2010 = AGB_2010_.updateMask(AGB_2010_.gt(0));
var AGB_recover2010_ratio = AGB_2010.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_2010.mask());
//2005
var forest_recover_time2005 = forest_recover_time2010.subtract(5);
var frt2005 = forest_recover_time2005.updateMask(forest_recover_time2005.gt(0));
var height_2005_ = frt2005.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_2005 = height_2005_.updateMask(height_2005_.gt(2));
var height_recover2005_ratio = height_2005.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_2005.mask());
var AGB_2005_=  height_2005.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_2005 = AGB_2005_.updateMask(AGB_2005_.gt(0));
var AGB_recover2005_ratio = AGB_2005.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_2005.mask());
//2000
var forest_recover_time2000 = forest_recover_time2005.subtract(5);
var frt2000 = forest_recover_time2000.updateMask(forest_recover_time2000.gt(0));
var height_2000_ = frt2000.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_2000 = height_2000_.updateMask(height_2000_.gt(2));
var height_recover2000_ratio = height_2000.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_2000.mask());
var AGB_2000_=  height_2000.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_2000 = AGB_2000_.updateMask(AGB_2000_.gt(0));
var AGB_recover2000_ratio = AGB_2000.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_2000.mask());
//1995
var forest_recover_time1995 = forest_recover_time2000.subtract(5);
var frt1995 = forest_recover_time1995.updateMask(forest_recover_time1995.gt(0));
var height_1995_ = frt1995.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_1995 = height_1995_.updateMask(height_1995_.gt(2));
var height_recover1995_ratio = height_1995.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_1995.mask());
var AGB_1995_=  height_1995.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_1995 = AGB_1995_.updateMask(AGB_1995_.gt(0));
var AGB_recover1995_ratio = AGB_1995.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_1995.mask());
//1990
var forest_recover_time1990 = forest_recover_time1995.subtract(5);
var frt1990 = forest_recover_time1990.updateMask(forest_recover_time1990.gt(0));
var height_1990_ = frt1990.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_1990 = height_1990_.updateMask(height_1990_.gt(2));
var height_recover1990_ratio = height_1990.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_1990.mask());
var AGB_1990_=  height_1990.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_1990 = AGB_1990_.updateMask(AGB_1990_.gt(0));
var AGB_recover1990_ratio = AGB_1990.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_1990.mask());
//1985
var forest_recover_time1985 = forest_recover_time1990.subtract(5);
var frt1985 = forest_recover_time1985.updateMask(forest_recover_time1985.gt(0));
var height_1985_ = frt1985.multiply(-0.0851).exp().multiply(-19.14).add(19.01).toUint8();
var height_1985 = height_1985_.updateMask(height_1985_.gt(2));
var height_recover1985_ratio = height_1985.float().divide(height_1981_reference).multiply(100).toUint8().updateMask(height_1985.mask());
var AGB_1985_=  height_1985.float().pow(2.12).multiply(0.0251).add(0.1).multiply(10).toUint8();
var AGB_1985 = AGB_1985_.updateMask(AGB_1985_.gt(0));
var AGB_recover1985_ratio = AGB_1985.float().divide(AGB_1981_reference).multiply(100).toUint8().updateMask(AGB_1985.mask());

//Map forest height and AGB regowth rate
//2020
var height_recover_rate2020 = forest_recover_time.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2020 = forest_recover_time.multiply(-0.0851).exp().multiply(0.0867).multiply
      (forest_recover_time.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//2015
var height_recover_rate2015 = frt2015.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2015 = frt2015.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt2015.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//2010
var height_recover_rate2010 = frt2010.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2010 = frt2010.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt2010.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//2005
var height_recover_rate2005 = frt2005.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2005 = frt2005.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt2005.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//2000
var height_recover_rate2000 = frt2000.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate2000 = frt2000.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt2000.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//1995
var height_recover_rate1995 = frt1995.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate1995 = frt1995.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt1995.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//1990
var height_recover_rate1990 = frt1990.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate1990 = frt1990.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt1990.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();
//1985
var height_recover_rate1985 = frt1985.multiply(-0.0851).exp().multiply(1.6288).add(0.1).multiply(10).toUint8();
var AGB_recover_rate1985 = frt1985.multiply(-0.0851).exp().multiply(0.0867).multiply
      (frt1985.multiply(-0.0851).exp().multiply(-19.14).add(19.01).pow(1.12)).add(0.1).multiply(10).toUint8();

//Add bands
var height_regrowth = recover_type2020.addBands([
                    height_recover2020_ratio, height_recover2015_ratio, height_recover2010_ratio, height_recover2005_ratio,
                    height_recover2000_ratio, height_recover1995_ratio, height_recover1990_ratio, height_recover1985_ratio,
                    height_recover_rate2020, height_recover_rate2015, height_recover_rate2010, height_recover_rate2005, 
                    height_recover_rate2000, height_recover_rate1995, height_recover_rate1990, height_recover_rate1985])
                    .rename([
                    'Regrowth_type_2020',
                    'Height_regrowth_ratio_2020', 'Height_regrowth_ratio_2015', 'Height_regrowth_ratio_2010', 'Height_regrowth_ratio_2005',
                    'Height_regrowth_ratio_2000', 'Height_regrowth_ratio_1995', 'Height_regrowth_ratio_1990', 'Height_regrowth_ratio_1985',
                    'Height_regrowth_rate_2020', 'Height_regrowth_rate_2015', 'Height_regrowth_rate_2010', 'Height_regrowth_rate_2005',
                    'Height_regrowth_rate_2000', 'Height_regrowth_rate_1995', 'Height_regrowth_rate_1990', 'Height_regrowth_rate_1985']);
var AGB_regrowth = recover_type2020.addBands([
                    AGB_recover2020_ratio, AGB_recover2015_ratio, AGB_recover2010_ratio, AGB_recover2005_ratio,
                    AGB_recover2000_ratio, AGB_recover1995_ratio, AGB_recover1990_ratio, AGB_recover1985_ratio,
                    AGB_recover_rate2020, AGB_recover_rate2015, AGB_recover_rate2010, AGB_recover_rate2005, 
                    AGB_recover_rate2000, AGB_recover_rate1995, AGB_recover_rate1990, AGB_recover_rate1985])
                    .rename([
                    'Regrowth_type_2020', 
                    'AGB_regrowth_ratio_2020', 'AGB_regrowth_ratio_2015', 'AGB_regrowth_ratio_2010', 'AGB_regrowth_ratio_2005',
                    'AGB_regrowth_ratio_2000', 'AGB_regrowth_ratio_1995', 'AGB_regrowth_ratio_1990', 'AGB_regrowth_ratio_1985',
                    'AGB_regrowth_rate_2020', 'AGB_regrowth_rate_2015', 'AGB_regrowth_rate_2010', 'AGB_regrowth_rate_2005',
                    'AGB_regrowth_rate_2000', 'AGB_regrowth_rate_1995', 'AGB_regrowth_rate_1990', 'AGB_regrowth_rate_1985']);

//Export Afirca1
var lonMin = 10; var lonMax = 40; 
var latMin = -10; var latMax = 10; 
for (var lon = lonMin; lon < lonMax; lon += 10) {for (var lat = latMin; lat < latMax; lat += 10) {
    var blockGeometry = ee.Geometry.Rectangle([lon, lat, lon + 10, lat + 10]);
    var clipped_height_regrowth = height_regrowth.clip(blockGeometry);
    var clipped_AGB_regrowth = AGB_regrowth.clip(blockGeometry);
    var direction = '';if (lat >= 0) {direction += 'N' + lat ;} else {direction += 'S' + -lat;} if (lon >= 0) {direction += '_E'  + lon;} else {direction += '_W' + -lon ;}
    var export1 = {image: clipped_height_regrowth,description: 'Afirca_height_regrowth_' + direction,
    folder: 'Deforest_Afirca_height_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export1);
    var export2 = {image: clipped_AGB_regrowth,description: 'Afirca_AGB_regrowth_' + direction,
    folder: 'Deforest_Afirca_AGB_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export2);}}
//Export Afirca2
var lonMin = -10; var lonMax = 10; 
var latMin = 0; var latMax = 10; 
for (var lon = lonMin; lon < lonMax; lon += 10) {for (var lat = latMin; lat < latMax; lat += 10) {
    var blockGeometry = ee.Geometry.Rectangle([lon, lat, lon + 10, lat + 10]);
    var clipped_height_regrowth = height_regrowth.clip(blockGeometry);
    var clipped_AGB_regrowth = AGB_regrowth.clip(blockGeometry);
    var direction = '';if (lat >= 0) {direction += 'N' + lat ;} else {direction += 'S' + -lat;} if (lon >= 0) {direction += '_E'  + lon;} else {direction += '_W' + -lon ;}
   var export1 = {image: clipped_height_regrowth,description: 'Afirca_height_regrowth_' + direction,
    folder: 'Deforest_Afirca_height_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export1);
   var export2 = {image: clipped_AGB_regrowth,description: 'Afirca_AGB_regrowth_' + direction,
    folder: 'Deforest_Afirca_AGB_regrowth30',scale: 30, crs: 'EPSG:4326', maxPixels: 1e13, fileDimensions: [18688, 18688], region: blockGeometry,skipEmptyTiles: true};Export.image.toDrive(export2);}}

// 导出影像500
//Export.image.toDrive({image: height_regrowth,description: 'height_regrowth500',folder: 'Deforest_Africa_regrowth500',region: Africa,scale: 500,crs: 'EPSG:4326', maxPixels: 1e13,});  
//Export.image.toDrive({image: AGB_regrowth,description: 'AGB_regrowth500',folder: 'Deforest_Africa_regrowth500',region: Africa,scale: 500,crs: 'EPSG:4326', maxPixels: 1e13,});  
